version: '2'

volumes:
    orderer.promark.com:
    peer0.adv1.promark.com:
    peer0.bus1.promark.com:

networks:
    test:

services:
    orderer.promark.com:
        container_name: orderer.promark.com
        image: hyperledger/fabric-orderer:$IMAGE_TAG
        ports:
            - 7000:7000
        networks:
            - test
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        environment:
            - FABRIC_LOGGING_SPEC=INFO
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7000
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            # enabled TLS
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
            - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]

        volumes:
            - ../channels/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
            - ../organizations/ordererOrganizations/promark.com/orderers/orderer.promark.com/msp:/var/hyperledger/orderer/msp
            - ../organizations/ordererOrganizations/promark.com/orderers/orderer.promark.com/tls/:/var/hyperledger/orderer/tls
            - orderer.promark.com:/var/hyperledger/production/orderer

    peer0.adv1.promark.com:
        container_name: peer0.adv1.promark.com
        image: hyperledger/fabric-peer:$IMAGE_TAG
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        ports:
            - 8000:8000
        networks:
            - test
        environment:
            #Generic peer variables
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            # the following setting starts chaincode containers on the same
            # bridge network as the peers
            # https://docs.docker.com/compose/networking/
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${PROJECT_NAME}_test
            - FABRIC_LOGGING_SPEC=INFO
            #- FABRIC_LOGGING_SPEC=DEBUG
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
            # Peer specific variabes
            - CORE_PEER_ID=peer0.adv1.promark.com
            - CORE_PEER_ADDRESS=peer0.adv1.promark.com:8000
            - CORE_PEER_LISTENADDRESS=0.0.0.0:8000
            - CORE_PEER_CHAINCODEADDRESS=peer0.adv1.promark.com:8001
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8001
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.adv1.promark.com:8000
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.adv1.promark.com:8000
            - CORE_PEER_LOCALMSPID=Adv1MSP
        volumes:
            - /var/run/docker.sock:/host/var/run/docker.sock
            - ../organizations/peerOrganizations/adv1.promark.com/peers/peer0.adv1.promark.com/msp:/etc/hyperledger/fabric/msp
            - ../organizations/peerOrganizations/adv1.promark.com/peers/peer0.adv1.promark.com/tls:/etc/hyperledger/fabric/tls
            - peer0.adv1.promark.com:/var/hyperledger/production


    peer0.bus1.promark.com:
        container_name: peer0.bus1.promark.com
        image: hyperledger/fabric-peer:$IMAGE_TAG
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        ports:
            - 9000:9000
        networks:
            - test
        environment:
            #Generic peer variables
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            # the following setting starts chaincode containers on the same
            # bridge network as the peers
            # https://docs.docker.com/compose/networking/
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${PROJECT_NAME}_test
            - FABRIC_LOGGING_SPEC=INFO
            #- FABRIC_LOGGING_SPEC=DEBUG
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
            # Peer specific variabes
            - CORE_PEER_ID=peer0.bus1.promark.com
            - CORE_PEER_ADDRESS=peer0.bus1.promark.com:9000
            - CORE_PEER_LISTENADDRESS=0.0.0.0:9000
            - CORE_PEER_CHAINCODEADDRESS=peer0.bus1.promark.com:9001
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9001
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.bus1.promark.com:9000
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.bus1.promark.com:9000
            - CORE_PEER_LOCALMSPID=Bus1MSP
        volumes:
            - /var/run/docker.sock:/host/var/run/docker.sock
            - ../organizations/peerOrganizations/bus1.promark.com/peers/peer0.bus1.promark.com/msp:/etc/hyperledger/fabric/msp
            - ../organizations/peerOrganizations/bus1.promark.com/peers/peer0.bus1.promark.com/tls:/etc/hyperledger/fabric/tls
            - peer0.bus1.promark.com:/var/hyperledger/production
